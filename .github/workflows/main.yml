name: workflow

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build-project:
    name: Test and Build Project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21.x' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install Go dependencies
        run: go get .

      - name: Run Go tests
        run: go test -json > TestResults-${{ matrix.go-version }}.json

      - name: Upload Go test results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Go-results-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.json

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-project
          path: .

  release-project:
    name: Release Project
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Download Artifiact
        uses: actions/download-artifact@v4
        with:
          name: go-project
          path: .
      - name: Test Artifiact Download
        run: ls -R
      - name: Archive Project
        uses: thedoctor0/zip-release@master
        with:
          filename: Go-Project-${{ matrix.go-version }}

      - name: Create Release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{github.run_number}}
          release_name: ${{github.run_number}}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create-new-release.outputs.upload_url}}
          asset_path: ./Go-Project-${{ matrix.go-version }}
          asset_name: project-v${{github.run_number}}.zip
          asset_content_type: application/zip


      # - name: Build and Push Docker Image
      #   run: |
      #     docker login --username mrbraden56 --password ${{ secrets.GH_PAT }} ghcr.io
      #     docker build . --tag ghcr.io/mrbraden56/project-ghcr:latest
      #     docker push ghcr.io/mrbraden56/project-ghcr:latest

